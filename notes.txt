Sort Algo

-> The Turk Algorithm | Turc Mecanique 
pusher les elements de stack_a dans stack_b tant qu il y a + de 3 elements dans stack_a
De plus, chaque fois qu un elemeent est mis dasn stack_b, il est trier par ordre croissant au sein de celui ci 

-> Radix Sort 


PSEUDO CODE

declarer structure 

stack_a = NULL | stack_b = NULL


checkeur errors

input errors | Argument count >= 2 | argv[1] != NULL (vide)

recuperer les argumenets
    Si string ==> split()  --> extraire chaque nombre au sein de la string 

Initiailiser stack_a avec tous les elements comme des noeux de stack_a
    checker les nombres (doublons, overflow, syntax errors) que des digits ou '-' et '+' signe 
        si une erreur est trouve, free(stack_a) et return ERROR 
    verifier chaque input, si c est un long integer
        si c'est une string -> convertir to long integer (atoli() ??)
    ajouter le noeu a stack_a

Check si stack_a est trie
    Si non, on fait passer notre fonction de tri
        check 2 num 
            juste swap les deux
        check 3 num
            sort_three() 
        check si stack + de 3 arguments 
            turk_algo()

Nettoyer la stack



UTILS FUNTIONS

-> checkeurs error  =>  free les stacks en fonction
-> operations functions : swap, ra, rb, rr, pa, pb, pp, ..
-> get_length_stack
-> find_lastnode
-> find_min | find_max



    


